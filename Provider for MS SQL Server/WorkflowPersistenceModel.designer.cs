#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OptimaJet.Workflow.DbPersistence
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SampleWorkflowEngineNET")]
	public partial class WorkflowPersistenceModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWorkflowProcessInstancePersistence(WorkflowProcessInstancePersistence instance);
    partial void UpdateWorkflowProcessInstancePersistence(WorkflowProcessInstancePersistence instance);
    partial void DeleteWorkflowProcessInstancePersistence(WorkflowProcessInstancePersistence instance);
    partial void InsertWorkflowProcessInstanceStatus(WorkflowProcessInstanceStatus instance);
    partial void UpdateWorkflowProcessInstanceStatus(WorkflowProcessInstanceStatus instance);
    partial void DeleteWorkflowProcessInstanceStatus(WorkflowProcessInstanceStatus instance);
    partial void InsertWorkflowRuntime(WorkflowRuntime instance);
    partial void UpdateWorkflowRuntime(WorkflowRuntime instance);
    partial void DeleteWorkflowRuntime(WorkflowRuntime instance);
    partial void InsertWorkflowScheme(WorkflowScheme instance);
    partial void UpdateWorkflowScheme(WorkflowScheme instance);
    partial void DeleteWorkflowScheme(WorkflowScheme instance);
    partial void InsertWorkflowProcessTimer(WorkflowProcessTimer instance);
    partial void UpdateWorkflowProcessTimer(WorkflowProcessTimer instance);
    partial void DeleteWorkflowProcessTimer(WorkflowProcessTimer instance);
    partial void InsertWorkflowProcessTransitionHistory(WorkflowProcessTransitionHistory instance);
    partial void UpdateWorkflowProcessTransitionHistory(WorkflowProcessTransitionHistory instance);
    partial void DeleteWorkflowProcessTransitionHistory(WorkflowProcessTransitionHistory instance);
    partial void InsertWorkflowGlobalParameter(WorkflowGlobalParameter instance);
    partial void UpdateWorkflowGlobalParameter(WorkflowGlobalParameter instance);
    partial void DeleteWorkflowGlobalParameter(WorkflowGlobalParameter instance);
    partial void InsertWorkflowProcessInstance(WorkflowProcessInstance instance);
    partial void UpdateWorkflowProcessInstance(WorkflowProcessInstance instance);
    partial void DeleteWorkflowProcessInstance(WorkflowProcessInstance instance);
    partial void InsertWorkflowProcessScheme(WorkflowProcessScheme instance);
    partial void UpdateWorkflowProcessScheme(WorkflowProcessScheme instance);
    partial void DeleteWorkflowProcessScheme(WorkflowProcessScheme instance);
    #endregion
		
		public WorkflowPersistenceModelDataContext() : 
				base(global::OptimaJet.Workflow.DbPersistence.Properties.Settings.Default.SampleWorkflowEngineNETConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowPersistenceModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowPersistenceModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowPersistenceModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowPersistenceModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WorkflowProcessInstancePersistence> WorkflowProcessInstancePersistences
		{
			get
			{
				return this.GetTable<WorkflowProcessInstancePersistence>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowProcessInstanceStatus> WorkflowProcessInstanceStatus
		{
			get
			{
				return this.GetTable<WorkflowProcessInstanceStatus>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowRuntime> WorkflowRuntimes
		{
			get
			{
				return this.GetTable<WorkflowRuntime>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowScheme> WorkflowSchemes
		{
			get
			{
				return this.GetTable<WorkflowScheme>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowProcessTimer> WorkflowProcessTimers
		{
			get
			{
				return this.GetTable<WorkflowProcessTimer>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowProcessTransitionHistory> WorkflowProcessTransitionHistories
		{
			get
			{
				return this.GetTable<WorkflowProcessTransitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowGlobalParameter> WorkflowGlobalParameters
		{
			get
			{
				return this.GetTable<WorkflowGlobalParameter>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowProcessInstance> WorkflowProcessInstances
		{
			get
			{
				return this.GetTable<WorkflowProcessInstance>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowProcessScheme> WorkflowProcessSchemes
		{
			get
			{
				return this.GetTable<WorkflowProcessScheme>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spWorkflowProcessResetRunningStatus")]
		public int spWorkflowProcessResetRunningStatus()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowProcessInstancePersistence")]
	public partial class WorkflowProcessInstancePersistence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProcessId;
		
		private string _ParameterName;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProcessIdChanging(System.Guid value);
    partial void OnProcessIdChanged();
    partial void OnParameterNameChanging(string value);
    partial void OnParameterNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public WorkflowProcessInstancePersistence()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ParameterName
		{
			get
			{
				return this._ParameterName;
			}
			set
			{
				if ((this._ParameterName != value))
				{
					this.OnParameterNameChanging(value);
					this.SendPropertyChanging();
					this._ParameterName = value;
					this.SendPropertyChanged("ParameterName");
					this.OnParameterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowProcessInstanceStatus")]
	public partial class WorkflowProcessInstanceStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private byte _Status;
		
		private System.Guid _Lock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnLockChanging(System.Guid value);
    partial void OnLockChanged();
    #endregion
		
		public WorkflowProcessInstanceStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowRuntime")]
	public partial class WorkflowRuntime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RuntimeId;
		
		private string _Timer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRuntimeIdChanging(System.Guid value);
    partial void OnRuntimeIdChanged();
    partial void OnTimerChanging(string value);
    partial void OnTimerChanged();
    #endregion
		
		public WorkflowRuntime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuntimeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RuntimeId
		{
			get
			{
				return this._RuntimeId;
			}
			set
			{
				if ((this._RuntimeId != value))
				{
					this.OnRuntimeIdChanging(value);
					this.SendPropertyChanging();
					this._RuntimeId = value;
					this.SendPropertyChanged("RuntimeId");
					this.OnRuntimeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Timer
		{
			get
			{
				return this._Timer;
			}
			set
			{
				if ((this._Timer != value))
				{
					this.OnTimerChanging(value);
					this.SendPropertyChanging();
					this._Timer = value;
					this.SendPropertyChanged("Timer");
					this.OnTimerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowScheme")]
	public partial class WorkflowScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSchemeChanging(string value);
    partial void OnSchemeChanged();
    #endregion
		
		public WorkflowScheme()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scheme", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this.OnSchemeChanging(value);
					this.SendPropertyChanging();
					this._Scheme = value;
					this.SendPropertyChanged("Scheme");
					this.OnSchemeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowProcessTimer")]
	public partial class WorkflowProcessTimer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProcessId;
		
		private string _Name;
		
		private System.DateTime _NextExecutionDateTime;
		
		private bool _Ignore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProcessIdChanging(System.Guid value);
    partial void OnProcessIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNextExecutionDateTimeChanging(System.DateTime value);
    partial void OnNextExecutionDateTimeChanged();
    partial void OnIgnoreChanging(bool value);
    partial void OnIgnoreChanged();
    #endregion
		
		public WorkflowProcessTimer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextExecutionDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime NextExecutionDateTime
		{
			get
			{
				return this._NextExecutionDateTime;
			}
			set
			{
				if ((this._NextExecutionDateTime != value))
				{
					this.OnNextExecutionDateTimeChanging(value);
					this.SendPropertyChanging();
					this._NextExecutionDateTime = value;
					this.SendPropertyChanged("NextExecutionDateTime");
					this.OnNextExecutionDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ignore", DbType="Bit NOT NULL")]
		public bool Ignore
		{
			get
			{
				return this._Ignore;
			}
			set
			{
				if ((this._Ignore != value))
				{
					this.OnIgnoreChanging(value);
					this.SendPropertyChanging();
					this._Ignore = value;
					this.SendPropertyChanged("Ignore");
					this.OnIgnoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowProcessTransitionHistory")]
	public partial class WorkflowProcessTransitionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProcessId;
		
		private string _ExecutorIdentityId;
		
		private string _ActorIdentityId;
		
		private string _FromActivityName;
		
		private string _ToActivityName;
		
		private string _ToStateName;
		
		private System.DateTime _TransitionTime;
		
		private string _TransitionClassifier;
		
		private bool _IsFinalised;
		
		private string _FromStateName;
		
		private string _TriggerName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProcessIdChanging(System.Guid value);
    partial void OnProcessIdChanged();
    partial void OnExecutorIdentityIdChanging(string value);
    partial void OnExecutorIdentityIdChanged();
    partial void OnActorIdentityIdChanging(string value);
    partial void OnActorIdentityIdChanged();
    partial void OnFromActivityNameChanging(string value);
    partial void OnFromActivityNameChanged();
    partial void OnToActivityNameChanging(string value);
    partial void OnToActivityNameChanged();
    partial void OnToStateNameChanging(string value);
    partial void OnToStateNameChanged();
    partial void OnTransitionTimeChanging(System.DateTime value);
    partial void OnTransitionTimeChanged();
    partial void OnTransitionClassifierChanging(string value);
    partial void OnTransitionClassifierChanged();
    partial void OnIsFinalisedChanging(bool value);
    partial void OnIsFinalisedChanged();
    partial void OnFromStateNameChanging(string value);
    partial void OnFromStateNameChanged();
    partial void OnTriggerNameChanging(string value);
    partial void OnTriggerNameChanged();
    #endregion
		
		public WorkflowProcessTransitionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorIdentityId", DbType="NVarChar(MAX) NOT NULL")]
		public string ExecutorIdentityId
		{
			get
			{
				return this._ExecutorIdentityId;
			}
			set
			{
				if ((this._ExecutorIdentityId != value))
				{
					this.OnExecutorIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorIdentityId = value;
					this.SendPropertyChanged("ExecutorIdentityId");
					this.OnExecutorIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorIdentityId", DbType="NVarChar(MAX) NOT NULL")]
		public string ActorIdentityId
		{
			get
			{
				return this._ActorIdentityId;
			}
			set
			{
				if ((this._ActorIdentityId != value))
				{
					this.OnActorIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._ActorIdentityId = value;
					this.SendPropertyChanged("ActorIdentityId");
					this.OnActorIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromActivityName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FromActivityName
		{
			get
			{
				return this._FromActivityName;
			}
			set
			{
				if ((this._FromActivityName != value))
				{
					this.OnFromActivityNameChanging(value);
					this.SendPropertyChanging();
					this._FromActivityName = value;
					this.SendPropertyChanged("FromActivityName");
					this.OnFromActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToActivityName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ToActivityName
		{
			get
			{
				return this._ToActivityName;
			}
			set
			{
				if ((this._ToActivityName != value))
				{
					this.OnToActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ToActivityName = value;
					this.SendPropertyChanged("ToActivityName");
					this.OnToActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStateName", DbType="NVarChar(MAX)")]
		public string ToStateName
		{
			get
			{
				return this._ToStateName;
			}
			set
			{
				if ((this._ToStateName != value))
				{
					this.OnToStateNameChanging(value);
					this.SendPropertyChanging();
					this._ToStateName = value;
					this.SendPropertyChanged("ToStateName");
					this.OnToStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTime", DbType="DateTime NOT NULL")]
		public System.DateTime TransitionTime
		{
			get
			{
				return this._TransitionTime;
			}
			set
			{
				if ((this._TransitionTime != value))
				{
					this.OnTransitionTimeChanging(value);
					this.SendPropertyChanging();
					this._TransitionTime = value;
					this.SendPropertyChanged("TransitionTime");
					this.OnTransitionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionClassifier", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TransitionClassifier
		{
			get
			{
				return this._TransitionClassifier;
			}
			set
			{
				if ((this._TransitionClassifier != value))
				{
					this.OnTransitionClassifierChanging(value);
					this.SendPropertyChanging();
					this._TransitionClassifier = value;
					this.SendPropertyChanged("TransitionClassifier");
					this.OnTransitionClassifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinalised", DbType="Bit NOT NULL")]
		public bool IsFinalised
		{
			get
			{
				return this._IsFinalised;
			}
			set
			{
				if ((this._IsFinalised != value))
				{
					this.OnIsFinalisedChanging(value);
					this.SendPropertyChanging();
					this._IsFinalised = value;
					this.SendPropertyChanged("IsFinalised");
					this.OnIsFinalisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStateName", DbType="NVarChar(MAX)")]
		public string FromStateName
		{
			get
			{
				return this._FromStateName;
			}
			set
			{
				if ((this._FromStateName != value))
				{
					this.OnFromStateNameChanging(value);
					this.SendPropertyChanging();
					this._FromStateName = value;
					this.SendPropertyChanged("FromStateName");
					this.OnFromStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerName", DbType="NVarChar(MAX)")]
		public string TriggerName
		{
			get
			{
				return this._TriggerName;
			}
			set
			{
				if ((this._TriggerName != value))
				{
					this.OnTriggerNameChanging(value);
					this.SendPropertyChanging();
					this._TriggerName = value;
					this.SendPropertyChanged("TriggerName");
					this.OnTriggerNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowGlobalParameter")]
	public partial class WorkflowGlobalParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Type;
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public WorkflowGlobalParameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowProcessInstance")]
	public partial class WorkflowProcessInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _StateName;
		
		private string _ActivityName;
		
		private System.Nullable<System.Guid> _SchemeId;
		
		private string _PreviousState;
		
		private string _PreviousStateForDirect;
		
		private string _PreviousStateForReverse;
		
		private string _PreviousActivity;
		
		private string _PreviousActivityForDirect;
		
		private string _PreviousActivityForReverse;
		
		private bool _IsDeterminingParametersChanged;
		
		private System.Nullable<System.Guid> _ParentProcessId;
		
		private System.Nullable<System.Guid> _RootProcessId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnActivityNameChanging(string value);
    partial void OnActivityNameChanged();
    partial void OnSchemeIdChanging(System.Nullable<System.Guid> value);
    partial void OnSchemeIdChanged();
    partial void OnPreviousStateChanging(string value);
    partial void OnPreviousStateChanged();
    partial void OnPreviousStateForDirectChanging(string value);
    partial void OnPreviousStateForDirectChanged();
    partial void OnPreviousStateForReverseChanging(string value);
    partial void OnPreviousStateForReverseChanged();
    partial void OnPreviousActivityChanging(string value);
    partial void OnPreviousActivityChanged();
    partial void OnPreviousActivityForDirectChanging(string value);
    partial void OnPreviousActivityForDirectChanged();
    partial void OnPreviousActivityForReverseChanging(string value);
    partial void OnPreviousActivityForReverseChanged();
    partial void OnIsDeterminingParametersChangedChanging(bool value);
    partial void OnIsDeterminingParametersChangedChanged();
    partial void OnParentProcessIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentProcessIdChanged();
    partial void OnRootProcessIdChanging(System.Nullable<System.Guid> value);
    partial void OnRootProcessIdChanged();
    #endregion
		
		public WorkflowProcessInstance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(MAX)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ActivityName
		{
			get
			{
				return this._ActivityName;
			}
			set
			{
				if ((this._ActivityName != value))
				{
					this.OnActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ActivityName = value;
					this.SendPropertyChanged("ActivityName");
					this.OnActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SchemeId
		{
			get
			{
				return this._SchemeId;
			}
			set
			{
				if ((this._SchemeId != value))
				{
					this.OnSchemeIdChanging(value);
					this.SendPropertyChanging();
					this._SchemeId = value;
					this.SendPropertyChanged("SchemeId");
					this.OnSchemeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousState", DbType="NVarChar(MAX)")]
		public string PreviousState
		{
			get
			{
				return this._PreviousState;
			}
			set
			{
				if ((this._PreviousState != value))
				{
					this.OnPreviousStateChanging(value);
					this.SendPropertyChanging();
					this._PreviousState = value;
					this.SendPropertyChanged("PreviousState");
					this.OnPreviousStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousStateForDirect", DbType="NVarChar(MAX)")]
		public string PreviousStateForDirect
		{
			get
			{
				return this._PreviousStateForDirect;
			}
			set
			{
				if ((this._PreviousStateForDirect != value))
				{
					this.OnPreviousStateForDirectChanging(value);
					this.SendPropertyChanging();
					this._PreviousStateForDirect = value;
					this.SendPropertyChanged("PreviousStateForDirect");
					this.OnPreviousStateForDirectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousStateForReverse", DbType="NVarChar(MAX)")]
		public string PreviousStateForReverse
		{
			get
			{
				return this._PreviousStateForReverse;
			}
			set
			{
				if ((this._PreviousStateForReverse != value))
				{
					this.OnPreviousStateForReverseChanging(value);
					this.SendPropertyChanging();
					this._PreviousStateForReverse = value;
					this.SendPropertyChanged("PreviousStateForReverse");
					this.OnPreviousStateForReverseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousActivity", DbType="NVarChar(MAX)")]
		public string PreviousActivity
		{
			get
			{
				return this._PreviousActivity;
			}
			set
			{
				if ((this._PreviousActivity != value))
				{
					this.OnPreviousActivityChanging(value);
					this.SendPropertyChanging();
					this._PreviousActivity = value;
					this.SendPropertyChanged("PreviousActivity");
					this.OnPreviousActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousActivityForDirect", DbType="NVarChar(MAX)")]
		public string PreviousActivityForDirect
		{
			get
			{
				return this._PreviousActivityForDirect;
			}
			set
			{
				if ((this._PreviousActivityForDirect != value))
				{
					this.OnPreviousActivityForDirectChanging(value);
					this.SendPropertyChanging();
					this._PreviousActivityForDirect = value;
					this.SendPropertyChanged("PreviousActivityForDirect");
					this.OnPreviousActivityForDirectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousActivityForReverse", DbType="NVarChar(MAX)")]
		public string PreviousActivityForReverse
		{
			get
			{
				return this._PreviousActivityForReverse;
			}
			set
			{
				if ((this._PreviousActivityForReverse != value))
				{
					this.OnPreviousActivityForReverseChanging(value);
					this.SendPropertyChanging();
					this._PreviousActivityForReverse = value;
					this.SendPropertyChanged("PreviousActivityForReverse");
					this.OnPreviousActivityForReverseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeterminingParametersChanged", DbType="Bit NOT NULL")]
		public bool IsDeterminingParametersChanged
		{
			get
			{
				return this._IsDeterminingParametersChanged;
			}
			set
			{
				if ((this._IsDeterminingParametersChanged != value))
				{
					this.OnIsDeterminingParametersChangedChanging(value);
					this.SendPropertyChanging();
					this._IsDeterminingParametersChanged = value;
					this.SendPropertyChanged("IsDeterminingParametersChanged");
					this.OnIsDeterminingParametersChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProcessId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentProcessId
		{
			get
			{
				return this._ParentProcessId;
			}
			set
			{
				if ((this._ParentProcessId != value))
				{
					this.OnParentProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ParentProcessId = value;
					this.SendPropertyChanged("ParentProcessId");
					this.OnParentProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootProcessId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RootProcessId
		{
			get
			{
				return this._RootProcessId;
			}
			set
			{
				if ((this._RootProcessId != value))
				{
					this.OnRootProcessIdChanging(value);
					this.SendPropertyChanging();
					this._RootProcessId = value;
					this.SendPropertyChanged("RootProcessId");
					this.OnRootProcessIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowProcessScheme")]
	public partial class WorkflowProcessScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Scheme;
		
		private string _DefiningParameters;
		
		private string _DefiningParametersHash;
		
		private string _SchemeCode;
		
		private bool _IsObsolete;
		
		private string _RootSchemeCode;
		
		private System.Nullable<System.Guid> _RootSchemeId;
		
		private string _AllowedActivities;
		
		private string _StartingTransition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSchemeChanging(string value);
    partial void OnSchemeChanged();
    partial void OnDefiningParametersChanging(string value);
    partial void OnDefiningParametersChanged();
    partial void OnDefiningParametersHashChanging(string value);
    partial void OnDefiningParametersHashChanged();
    partial void OnSchemeCodeChanging(string value);
    partial void OnSchemeCodeChanged();
    partial void OnIsObsoleteChanging(bool value);
    partial void OnIsObsoleteChanged();
    partial void OnRootSchemeCodeChanging(string value);
    partial void OnRootSchemeCodeChanged();
    partial void OnRootSchemeIdChanging(System.Nullable<System.Guid> value);
    partial void OnRootSchemeIdChanged();
    partial void OnAllowedActivitiesChanging(string value);
    partial void OnAllowedActivitiesChanged();
    partial void OnStartingTransitionChanging(string value);
    partial void OnStartingTransitionChanged();
    #endregion
		
		public WorkflowProcessScheme()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scheme", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this.OnSchemeChanging(value);
					this.SendPropertyChanging();
					this._Scheme = value;
					this.SendPropertyChanged("Scheme");
					this.OnSchemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefiningParameters", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DefiningParameters
		{
			get
			{
				return this._DefiningParameters;
			}
			set
			{
				if ((this._DefiningParameters != value))
				{
					this.OnDefiningParametersChanging(value);
					this.SendPropertyChanging();
					this._DefiningParameters = value;
					this.SendPropertyChanged("DefiningParameters");
					this.OnDefiningParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefiningParametersHash", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string DefiningParametersHash
		{
			get
			{
				return this._DefiningParametersHash;
			}
			set
			{
				if ((this._DefiningParametersHash != value))
				{
					this.OnDefiningParametersHashChanging(value);
					this.SendPropertyChanging();
					this._DefiningParametersHash = value;
					this.SendPropertyChanged("DefiningParametersHash");
					this.OnDefiningParametersHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemeCode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SchemeCode
		{
			get
			{
				return this._SchemeCode;
			}
			set
			{
				if ((this._SchemeCode != value))
				{
					this.OnSchemeCodeChanging(value);
					this.SendPropertyChanging();
					this._SchemeCode = value;
					this.SendPropertyChanged("SchemeCode");
					this.OnSchemeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsObsolete", DbType="Bit NOT NULL")]
		public bool IsObsolete
		{
			get
			{
				return this._IsObsolete;
			}
			set
			{
				if ((this._IsObsolete != value))
				{
					this.OnIsObsoleteChanging(value);
					this.SendPropertyChanging();
					this._IsObsolete = value;
					this.SendPropertyChanged("IsObsolete");
					this.OnIsObsoleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootSchemeCode", DbType="NVarChar(MAX)")]
		public string RootSchemeCode
		{
			get
			{
				return this._RootSchemeCode;
			}
			set
			{
				if ((this._RootSchemeCode != value))
				{
					this.OnRootSchemeCodeChanging(value);
					this.SendPropertyChanging();
					this._RootSchemeCode = value;
					this.SendPropertyChanged("RootSchemeCode");
					this.OnRootSchemeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootSchemeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RootSchemeId
		{
			get
			{
				return this._RootSchemeId;
			}
			set
			{
				if ((this._RootSchemeId != value))
				{
					this.OnRootSchemeIdChanging(value);
					this.SendPropertyChanging();
					this._RootSchemeId = value;
					this.SendPropertyChanged("RootSchemeId");
					this.OnRootSchemeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedActivities", DbType="NVarChar(MAX)")]
		public string AllowedActivities
		{
			get
			{
				return this._AllowedActivities;
			}
			set
			{
				if ((this._AllowedActivities != value))
				{
					this.OnAllowedActivitiesChanging(value);
					this.SendPropertyChanging();
					this._AllowedActivities = value;
					this.SendPropertyChanged("AllowedActivities");
					this.OnAllowedActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingTransition", DbType="NVarChar(MAX)")]
		public string StartingTransition
		{
			get
			{
				return this._StartingTransition;
			}
			set
			{
				if ((this._StartingTransition != value))
				{
					this.OnStartingTransitionChanging(value);
					this.SendPropertyChanging();
					this._StartingTransition = value;
					this.SendPropertyChanged("StartingTransition");
					this.OnStartingTransitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
